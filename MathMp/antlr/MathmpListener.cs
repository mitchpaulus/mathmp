//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mathmp.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MathmpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMathmpListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] MathmpParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] MathmpParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMath([NotNull] MathmpParser.MathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMath([NotNull] MathmpParser.MathContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExp([NotNull] MathmpParser.IdentifierExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExp([NotNull] MathmpParser.IdentifierExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SuperscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuperscriptExp([NotNull] MathmpParser.SuperscriptExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SuperscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuperscriptExp([NotNull] MathmpParser.SuperscriptExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorExp([NotNull] MathmpParser.OperatorExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorExp([NotNull] MathmpParser.OperatorExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SubscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscriptExp([NotNull] MathmpParser.SubscriptExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SubscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscriptExp([NotNull] MathmpParser.SubscriptExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExp([NotNull] MathmpParser.ParenExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExp([NotNull] MathmpParser.ParenExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BracedExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracedExp([NotNull] MathmpParser.BracedExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BracedExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracedExp([NotNull] MathmpParser.BracedExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SqrtExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqrtExp([NotNull] MathmpParser.SqrtExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SqrtExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqrtExp([NotNull] MathmpParser.SqrtExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DivExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivExp([NotNull] MathmpParser.DivExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivExp([NotNull] MathmpParser.DivExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberExp([NotNull] MathmpParser.NumberExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberExp([NotNull] MathmpParser.NumberExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DotExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotExp([NotNull] MathmpParser.DotExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DotExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotExp([NotNull] MathmpParser.DotExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] MathmpParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] MathmpParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] MathmpParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] MathmpParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] MathmpParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] MathmpParser.NumberContext context);
}
