//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mathmp.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMathmpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MathmpBaseListener : IMathmpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] MathmpParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] MathmpParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMath([NotNull] MathmpParser.MathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMath([NotNull] MathmpParser.MathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExp([NotNull] MathmpParser.IdentifierExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExp([NotNull] MathmpParser.IdentifierExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SuperscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuperscriptExp([NotNull] MathmpParser.SuperscriptExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SuperscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuperscriptExp([NotNull] MathmpParser.SuperscriptExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorExp([NotNull] MathmpParser.OperatorExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorExp([NotNull] MathmpParser.OperatorExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SubscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscriptExp([NotNull] MathmpParser.SubscriptExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubscriptExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscriptExp([NotNull] MathmpParser.SubscriptExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExp([NotNull] MathmpParser.ParenExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExp([NotNull] MathmpParser.ParenExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BracedExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedExp([NotNull] MathmpParser.BracedExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BracedExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedExp([NotNull] MathmpParser.BracedExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SqrtExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqrtExp([NotNull] MathmpParser.SqrtExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SqrtExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqrtExp([NotNull] MathmpParser.SqrtExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DivExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivExp([NotNull] MathmpParser.DivExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DivExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivExp([NotNull] MathmpParser.DivExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExp([NotNull] MathmpParser.NumberExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExp([NotNull] MathmpParser.NumberExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DotExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDotExp([NotNull] MathmpParser.DotExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DotExp</c>
	/// labeled alternative in <see cref="MathmpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDotExp([NotNull] MathmpParser.DotExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] MathmpParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] MathmpParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] MathmpParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] MathmpParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MathmpParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] MathmpParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathmpParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] MathmpParser.NumberContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
